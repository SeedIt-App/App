patch-package
--- a/node_modules/react-native-camera/android/src/main/java/org/reactnative/camera/CameraModule.java
+++ b/node_modules/react-native-camera/android/src/main/java/org/reactnative/camera/CameraModule.java
@@ -27,6 +28,8 @@ import java.util.HashMap;
 import java.util.Map;
 import java.util.Set;
 
+import java.io.ByteArrayOutputStream;
+
 import javax.annotation.Nullable;
 
 public class CameraModule extends ReactContextBaseJavaModule {
@@ -194,16 +197,19 @@ public class CameraModule extends ReactContextBaseJavaModule {
           RNCameraView cameraView = (RNCameraView) nativeViewHierarchyManager.resolveView(viewTag);
           try {
               if (!Build.FINGERPRINT.contains("generic")) {
                 if (cameraView.isCameraOpened()) {
                   cameraView.takePicture(options, promise, cacheDirectory);
                 } else {
                   promise.reject("E_CAMERA_UNAVAILABLE", "Camera is not running");
                 }
               } else {
                   Bitmap image = RNCameraViewHelper.generateSimulatorPhoto(cameraView.getWidth(), cameraView.getHeight());
-                  ByteBuffer byteBuffer = ByteBuffer.allocate(image.getRowBytes() * image.getHeight());
-                  image.copyPixelsToBuffer(byteBuffer);
-                  new ResolveTakenPictureAsyncTask(byteBuffer.array(), promise, options).execute();
+
+                  ByteArrayOutputStream stream = new ByteArrayOutputStream();
+                  image.compress(Bitmap.CompressFormat.JPEG, 100, stream);
+                  byte[] byteArray = stream.toByteArray();
+
+                  new ResolveTakenPictureAsyncTask(byteArray, promise, options, cacheDirectory).execute();
               }
         } catch (Exception e) {
           promise.reject("E_CAMERA_BAD_VIEWTAG", "takePictureAsync: Expected a Camera component");
--- a/node_modules/react-native-camera/android/src/main/java/org/reactnative/camera/RNCameraViewHelper.java
+++ b/node_modules/react-native-camera/android/src/main/java/org/reactnative/camera/RNCameraViewHelper.java
@@ -292,8 +292,12 @@ public class RNCameraViewHelper {
     textPaint.setColor(Color.YELLOW);
     textPaint.setTextSize(35);
     Calendar calendar = Calendar.getInstance();
-    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd.MM.YY HH:mm:ss", Locale.getDefault());
-    canvas.drawText(simpleDateFormat.format(calendar.getTime()), width * 0.1f, height * 0.9f, textPaint);
+    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy.MM.dd G '->' HH:mm:ss z");
+    canvas.drawText(simpleDateFormat.format(calendar.getTime()), width * 0.1f, height * 0.2f, textPaint);
+    canvas.drawText(simpleDateFormat.format(calendar.getTime()), width * 0.2f, height * 0.4f, textPaint);
+    canvas.drawText(simpleDateFormat.format(calendar.getTime()), width * 0.3f, height * 0.6f, textPaint);
+    canvas.drawText(simpleDateFormat.format(calendar.getTime()), width * 0.4f, height * 0.8f, textPaint);
+
     return fakePhoto;
   }
 }
